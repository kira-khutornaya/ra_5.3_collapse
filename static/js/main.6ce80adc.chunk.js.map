{"version":3,"sources":["Collapse.js","CollapseManager.js","App.js","reportWebVitals.js","index.js"],"names":["Collapse","collapsedLabel","expandedLabel","isExpanded","onExpandedChange","children","iconClass","parentRef","useRef","className","ref","style","height","current","scrollHeight","href","onClick","defaultProps","CollapseManager","useState","state","setState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAGA,SAASA,EAAT,GAEI,IADFC,EACC,EADDA,eAAgBC,EACf,EADeA,cAAeC,EAC9B,EAD8BA,WAAYC,EAC1C,EAD0CA,iBAAkBC,EAC5D,EAD4DA,SAEvDC,EAAYH,EAAa,iCAAmC,gCAC5DI,EAAYC,mBAElB,OACE,qBAAKC,UAAU,WAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qBACEA,UAAU,oBACVC,IAAKH,EACLI,MAAOR,EAAa,CAAES,OAAO,GAAD,OAAKL,EAAUM,QAAQC,aAAvB,OAA4C,CAAEF,OAAQ,GAHpF,SAKGP,IAGH,oBACEI,UAAU,iBACVM,KAAK,KACLC,QAASZ,EAHX,UAKE,sBAAMK,UAAU,gCAAhB,SACE,sBAAMA,UAAU,sBAAhB,SACGN,EAAaD,EAAgBD,MAGlC,sBAAMQ,UAAWH,cAQ7BN,EAASiB,aAAe,CACtBhB,eAAgB,+DAChBC,cAAe,oDAWFF,QC7BAkB,MAlBf,WAA4B,IAAD,EACCC,oBAAS,GADV,mBAClBC,EADkB,KACXC,EADW,KAIzB,OACE,cAAC,EAAD,CACEpB,eAAe,yDACfC,cAAc,uCACdC,WAAYiB,EACZhB,iBAPyB,kBAAMiB,GAAUD,IAG3C,SAME,w+CCNSE,MANf,WACE,OACE,cAAC,EAAD,KCQWC,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6ce80adc.chunk.js","sourcesContent":["import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Collapse({\n  collapsedLabel, expandedLabel, isExpanded, onExpandedChange, children,\n}) {\n  const iconClass = isExpanded ? 'Collapse-link__icon icon_close' : 'Collapse-link__icon icon_open';\n  const parentRef = useRef();\n\n  return (\n    <div className=\"Collapse\">\n      <div className=\"Collapse__container\">\n        <div className=\"Collapse__body\">\n          <div\n            className=\"Collapse__content\"\n            ref={parentRef}\n            style={isExpanded ? { height: `${parentRef.current.scrollHeight}px` } : { height: 0 }}\n          >\n            {children}\n          </div>\n\n          <a\n            className=\"Collapse__link\"\n            href=\"#0\"\n            onClick={onExpandedChange}\n          >\n            <span className=\"Collapse-link__text-container\">\n              <span className=\"Collapse-link__text\">\n                {isExpanded ? expandedLabel : collapsedLabel}\n              </span>\n            </span>\n            <span className={iconClass} />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nCollapse.defaultProps = {\n  collapsedLabel: 'Развернуть',\n  expandedLabel: 'Свернуть',\n};\n\nCollapse.propTypes = {\n  collapsedLabel: PropTypes.string,\n  expandedLabel: PropTypes.string,\n  isExpanded: PropTypes.bool.isRequired,\n  onExpandedChange: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Collapse;\n","/* eslint max-len: [\"error\", { \"code\": 400 }] */\n\nimport React, { useState } from 'react';\nimport Collapse from './Collapse';\n\nfunction CollapseManager() {\n  const [state, setState] = useState(false);\n  const handleExpandedChange = () => setState(!state);\n\n  return (\n    <Collapse\n      collapsedLabel=\"Подробнее\"\n      expandedLabel=\"Скрыть\"\n      isExpanded={state}\n      onExpandedChange={handleExpandedChange}\n    >\n      <p>\n        Альфа-Банк, основанный в&nbsp;1990 году, является универсальным банком, осуществляющим все основные виды банковских операций, представленных на рынке финансовых услуг, включая обслуживание частных и&nbsp;корпоративных клиентов, инвестиционный банковский бизнес, торговое финансирование и&nbsp;т.д.\n      </p>\n    </Collapse>\n  );\n}\n\nexport default CollapseManager;\n","import React from 'react';\nimport './App.css';\nimport CollapseManager from './CollapseManager';\n\nfunction App() {\n  return (\n    <CollapseManager />\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}